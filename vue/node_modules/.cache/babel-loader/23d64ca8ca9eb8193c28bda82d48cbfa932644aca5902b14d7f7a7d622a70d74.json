{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"EditBook\",\n  data() {\n    return {\n      form: {\n        score: 10\n      },\n      categories: [],\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入书名',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  handleCoverSuccess(res) {\n    if (res.code == '200') this.form.cover = res.data;\n  },\n  created() {\n    request.get('/category/tree').then(res => {\n      this.categories = res.data;\n    });\n    const id = this.$route.query.id;\n    request.get(\"/book/\" + id).then(res => {\n      this.form = res.data;\n    });\n  },\n  methods: {\n    save() {\n      request.put('/book/update', this.form).then(res => {\n        if (res.code == '200') {\n          this.$notify.success('修改成功');\n          this.$router.push(\"/bookList\");\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    handleChange(val) {\n      console.log(val);\n    }\n  }\n};","map":{"version":3,"names":["request","name","data","form","score","categories","rules","required","message","trigger","handleCoverSuccess","res","code","cover","created","get","then","id","$route","query","methods","save","put","$notify","success","$router","push","error","msg","handleChange","val","console","log"],"sources":["src/views/book/Edit.vue"],"sourcesContent":["<template>\r\n    <div style=\"width: 100%\">\r\n        <div style=\"padding: 0 20px\">\r\n            <h3>编辑用户</h3>\r\n        </div>\r\n        <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\">\r\n            <el-form-item label=\"书名\" prop=\"name\">\r\n                <el-input v-model=\"form.name\" placeholder=\"请输入书名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"作者\" prop=\"author\">\r\n                <el-input v-model=\"form.author\" placeholder=\"请输入作者\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"出版商\" prop=\"publisher\">\r\n                <el-input v-model=\"form.publisher\" placeholder=\"请输入出版商\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"出版日期\" prop=\"publishDate\">\r\n                <el-date-picker\r\n                    v-model=\"form.publishDate\"\r\n                    type=\"date\"\r\n                    placeholder=\"请选择出版日期\">\r\n                </el-date-picker>\r\n            </el-form-item>\r\n            <el-form-item label=\"图书编号\" prop=\"bookNo\">\r\n                <el-input v-model=\"form.bookNo\"  placeholder=\"请输入图书编号\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"分类\" prop=\"category\">\r\n                <el-cascader\r\n                    style=\"width: 200px\"\r\n                    :props=\"{value:'name',label:'name'}\"\r\n                    v-model=\"form.categories\"\r\n                    :options=\"categories\"\r\n                    @change=\"handleChange\"></el-cascader>\r\n            </el-form-item>\r\n            <el-form-item label=\"数量\" prop=\"nums\">\r\n                <el-input-number v-model=\"form.nums\" :min=\"1\" label=\"数量\"></el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"所需积分\" prop=\"score\">\r\n                <el-input-number v-model=\"form.score\" :min=\"10\" :max=\"30\" label=\"所需积分\"></el-input-number>\r\n            </el-form-item>\r\n            <br>\r\n            <el-form-item label=\"内容简介\" prop=\"description\">\r\n                <el-input style=\"width: 250px\" type=\"textarea\" v-model=\"form.description\" placeholder=\"请输入描述\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"封面\" prop=\"cover\">\r\n                <el-upload\r\n                    class=\"avatar-uploader\"\r\n                    action=\"http://localhost:9090/book/file/upload\"\r\n                    :show-file-list=\"false\"\r\n                    :on-success=\"handleCoverSuccess\">\r\n                    <img v-if=\"form.cover\" :src=\"form.cover\" class=\"avatar\">\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                </el-upload>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n\r\n        <div style=\"text-align: center;margin-top: 40px\">\r\n            <el-button type=\"primary\" @click=\"save\" size=\"medium\">提交</el-button>\r\n            <!--<el-button type=\"danger\">取消</el-button>-->\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n    name: \"EditBook\",\r\n    data() {\r\n        return {\r\n            form: {score:10},\r\n            categories:[],\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入书名', trigger: 'blur' },\r\n                ],\r\n            }\r\n        }\r\n    },\r\n    handleCoverSuccess(res){\r\n        if(res.code=='200')\r\n            this.form.cover=res.data\r\n    },\r\n    created() {\r\n        request.get('/category/tree').then(res=>{\r\n            this.categories=res.data\r\n        })\r\n        const id=this.$route.query.id\r\n        request.get(\"/book/\"+id).then(res=>{\r\n            this.form=res.data\r\n        })\r\n\r\n    },\r\n    methods:{\r\n        save(){\r\n            request.put('/book/update',this.form).then(res=>{\r\n                if(res.code=='200'){\r\n                    this.$notify.success('修改成功')\r\n                    this.$router.push(\"/bookList\")\r\n                }\r\n                else{\r\n                    this.$notify.error(res.msg)\r\n                }\r\n\r\n            })\r\n\r\n        },\r\n        handleChange(val){\r\n            console.log(val)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n}\r\n.avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n}\r\n</style>"],"mappings":";AAkEA,OAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QAAAC,KAAA;MAAA;MACAC,UAAA;MACAC,KAAA;QACAL,IAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,mBAAAC,GAAA;IACA,IAAAA,GAAA,CAAAC,IAAA,WACA,KAAAT,IAAA,CAAAU,KAAA,GAAAF,GAAA,CAAAT,IAAA;EACA;EACAY,QAAA;IACAd,OAAA,CAAAe,GAAA,mBAAAC,IAAA,CAAAL,GAAA;MACA,KAAAN,UAAA,GAAAM,GAAA,CAAAT,IAAA;IACA;IACA,MAAAe,EAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;IACAjB,OAAA,CAAAe,GAAA,YAAAE,EAAA,EAAAD,IAAA,CAAAL,GAAA;MACA,KAAAR,IAAA,GAAAQ,GAAA,CAAAT,IAAA;IACA;EAEA;EACAkB,OAAA;IACAC,KAAA;MACArB,OAAA,CAAAsB,GAAA,sBAAAnB,IAAA,EAAAa,IAAA,CAAAL,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAW,OAAA,CAAAC,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;QACA,OACA;UACA,KAAAH,OAAA,CAAAI,KAAA,CAAAhB,GAAA,CAAAiB,GAAA;QACA;MAEA;IAEA;IACAC,aAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}